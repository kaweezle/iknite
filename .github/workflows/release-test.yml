# cSpell: disable
name: Test release with GoReleaser

on:
  pull_request:
    branches: ["main"]

jobs:
  goreleaser-snapshot:
    name: Test GoReleaser packaging
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1
      - name: Import Signature key
        shell: bash
        run: |
          echo -e "$GPG_PRIVATE_KEY" > gpg_key.asc
          openssl rsa -in gpg_key.asc -pubout -out kaweezle-devel@kaweezle.com-c9d89864.rsa.pub
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      - name: Run GoReleaser Tests
        uses: goreleaser/goreleaser-action@v5
        with:
          version: '~> v2'
          args: --snapshot --skip=publish --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload assets
        uses: actions/upload-artifact@v4
        with:
          name: packages
          path: |
            dist/*.apk
            dist/metadata.json
            dist/SHA256SUMS
      - name: Build APK repo
        uses: ./.github/actions/make-apkindex
        with:
          apk_files: dist/*.apk
          signature_key: "${{ secrets.GPG_PRIVATE_KEY }}"
          signature_key_name: kaweezle-devel@kaweezle.com-c9d89864.rsa
          destination: dist/repo
      - name: Commit repo to kaweezle.com
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.REPO_ACCESS_TOKEN }}
        with:
          source-directory: dist/repo
          destination-github-username: kaweezle
          destination-repository-name: kaweezle.github.io
          # TODO: replace with kaweezle-devel
          user-name: antoinemartin
          user-email: antoine@openance.com
          target-branch: release-iknite-test
          target-directory: docs/repo
          commit-message: iknite APK repo ${{ github.ref_name }}

  build-rootfs:
    name: Build Root Filesystem for WSL
    needs: [goreleaser-snapshot]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:master
          buildkitd-flags: "--allow-insecure-entitlement security.insecure"

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single-buildx

      - name: Get built apks
        uses: actions/download-artifact@v4
        with:
          name: packages
          path: packages

      - name: Build root fs
        run: |
          export IKNITE_VERSION=$(jq -Mr ".version" packages/metadata.json)
          export IKNITE_LAST_TAG=$(jq -Mr ".tag" packages/metadata.json)
          echo "Version is $IKNITE_VERSION"
          mv packages/iknite-${IKNITE_VERSION}.x86_64.apk rootfs
          cd rootfs
          mkdir -p /tmp/.buildx-cache
          mkdir -p /tmp/.buildx-cache-new
          docker buildx build \
             --build-arg IKNITE_VERSION=$IKNITE_VERSION \
             --build-arg IKNITE_LAST_TAG=$IKNITE_LAST_TAG \
             --allow security.insecure \
             --cache-from type=local,src=/tmp/.buildx-cache \
             --cache-to type=local,dest=/tmp/.buildx-cache-new \
             --output type=tar . | gzip >kaweezle.rootfs.tar.gz
          sha256sum kaweezle.rootfs.tar.gz >> ../packages/SHA256SUMS

      - name: Upload root fs artifact
        uses: actions/upload-artifact@v4
        with:
          name: rootfs
          path: |
            rootfs/kaweezle.rootfs.tar.gz
            packages/SHA256SUMS

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
